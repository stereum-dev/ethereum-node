import { defineStore } from "pinia";
export const useServices = defineStore("services", {
    state: () => {
        return {
            installedServices: [],
            runningServices: [],
            allServices: [
                {
                    id: 1,
                    name: "Lighthouse",
                    service: "LighthouseBeaconService",
                    category: "consensus",
                    displayCategory: "csc",
                    path: "/lighthouse",
                    icon: require("../../public/img/icon/plugin-icons/consensus/LightHouse.png"),
                    sIcon: require("../../public/img/icon/plugin-icons/consensus/Lighthouse-s.png"),
                    headerOption: false,
                    drag: true,
                    state: 'exited',
                    config: {
                        serviceID: "",
                        configVersion: "",
                        image: "",
                        imageVersion: "",
                        ports: [],
                        volumes: [],
                        network: "",
                    }
                },
                {
                    id: 2,
                    name: "Lighthouse",
                    service: "LighthouseValidatorService",
                    category: "validator",
                    displayCategory: "vlc",
                    path: "/lighthouse",
                    icon: require("../../public/img/icon/plugin-icons/validator/lighthouse-validator.png"),
                    sIcon: require("../../public/img/icon/plugin-icons/validator/Lighthouse-s.png"),
                    headerOption: false,
                    drag: true,
                    state: 'exited',
                    config: {
                        serviceID: "",
                        configVersion: "",
                        image: "",
                        imageVersion: "",
                        ports: [],
                        volumes: [],
                        network: "",
                    }
                },
                {
                    id: 3,
                    name: "Prysm",
                    service: "PrysmBeaconService",
                    category: "consensus",
                    displayCategory: "csc",
                    path: "/prysm",
                    icon: require("../../public/img/icon/plugin-icons/consensus/Prysm.png"),
                    sIcon: require("../../public/img/icon/plugin-icons/consensus/Prysm-s.png"),
                    headerOption: false,
                    drag: true,
                    state: 'exited',
                    config: {
                        serviceID: "",
                        configVersion: "",
                        image: "",
                        imageVersion: "",
                        ports: [],
                        volumes: [],
                        network: "",
                    }
                },
                {
                    id: 4,
                    name: "Prysm",
                    service: "PrysmValidatorService",
                    category: "validator",
                    displayCategory: "vlc",
                    path: "/prysm",
                    icon: require("../../public/img/icon/plugin-icons/validator/prysm-validator.png"),
                    sIcon: require("../../public/img/icon/plugin-icons/validator/Prysm-s.png"),
                    headerOption: false,
                    drag: true,
                    state: 'exited',
                    config: {
                        serviceID: "",
                        configVersion: "",
                        image: "",
                        imageVersion: "",
                        ports: [],
                        volumes: [],
                        network: "",
                    }
                },
                {
                    id: 5,
                    name: "Nimbus",
                    service: "NimbusBeaconService",
                    category: "consensus",
                    displayCategory: "csc",
                    path: "/nimbus",
                    icon: require("../../public/img/icon/plugin-icons/consensus/Nimbus.png"),
                    sIcon: require("../../public/img/icon/plugin-icons/consensus/Nimbus-s.png"),
                    headerOption: false,
                    drag: true,
                    state: 'exited',
                    config: {
                        serviceID: "",
                        configVersion: "",
                        image: "",
                        imageVersion: "",
                        ports: [],
                        volumes: [],
                        network: "",
                    }
                },
                {
                    id: 6,
                    name: "Nimbus",
                    service: "NimbusValidatorService",
                    category: "validator",
                    displayCategory: "vlc",
                    path: "/nimbus",
                    icon: require("../../public/img/icon/plugin-icons/validator/nimbus-validator.png"),
                    sIcon: require("../../public/img/icon/plugin-icons/validator/Nimbus-s.png"),
                    headerOption: false,
                    drag: true,
                    state: 'exited',
                    config: {
                        serviceID: "",
                        configVersion: "",
                        image: "",
                        imageVersion: "",
                        ports: [],
                        volumes: [],
                        network: "",
                    }
                },
                {
                    id: 7,
                    name: "Teku",
                    service: "TekuBeaconService",
                    category: "consensus",
                    displayCategory: "csc",
                    path: "/teku",
                    icon: require("../../public/img/icon/plugin-icons/consensus/Teku.png"),
                    sIcon: require("../../public/img/icon/plugin-icons/consensus/Teku-s.png"),
                    headerOption: false,
                    drag: true,
                    state: 'exited',
                    config: {
                        serviceID: "",
                        configVersion: "",
                        image: "",
                        imageVersion: "",
                        ports: [],
                        volumes: [],
                        network: "",
                    }
                },
                {
                    id: 8,
                    name: "Teku",
                    service: "TekuValidatorService",
                    category: "validator",
                    displayCategory: "vlc",
                    path: "/teku",
                    icon: require("../../public/img/icon/plugin-icons/validator/teku-validator.png"),
                    sIcon: require("../../public/img/icon/plugin-icons/validator/Teku-s.png"),
                    headerOption: false,
                    drag: true,
                    state: 'exited',
                    config: {
                        serviceID: "",
                        configVersion: "",
                        image: "",
                        imageVersion: "",
                        ports: [],
                        volumes: [],
                        network: "",
                    }
                },
                {
                    id: 9,
                    name: "Blox SSV",
                    service: "BloxSSVService",
                    category: "validator",
                    displayCategory: "vlc",
                    path: "/blox-ssv",
                    icon: require("../../public/img/icon/plugin-icons/Other/blox-ssv.png"),
                    sIcon: require("../../public/img/icon/plugin-icons/Other/Blox-ssv-s.png"),
                    hIcon: "/img/icon/service-icons/ssv.png",
                    linkUrl: "https://stereum.net",
                    headerOption: true,
                    drag: true,
                    state: 'exited',
                    config: {
                        serviceID: "",
                        configVersion: "",
                        image: "",
                        imageVersion: "",
                        ports: [],
                        volumes: [],
                        network: "",
                    }
                },
                {
                    id: 10,
                    name: "Prometheus",
                    service: "PrometheusService",
                    category: "service",
                    path: "/prometheus",
                    icon: require("../../public/img/icon/plugin-icons/Other/prometheus.png"),
                    sIcon: require("../../public/img/icon/plugin-icons/Other/Prometheus-s.png"),
                    hIcon: "/img/icon/service-icons/prometheus.png",
                    linkUrl: "https://stereum.net",
                    headerOption: true,
                    tunnelLink: true,
                    drag: true,
                    state: 'exited',
                    config: {
                        serviceID: "",
                        configVersion: "",
                        image: "",
                        imageVersion: "",
                        ports: [],
                        volumes: [],
                        network: "",
                    }
                },
                {
                    id: 11,
                    name: "Grafana",
                    service: "GrafanaService",
                    category: "service",
                    path: "/grafana",
                    icon: require("../../public/img/icon/plugin-icons/Other/grafana-service.png"),
                    sIcon: require("../../public/img/icon/plugin-icons/Other/Grafana-s.png"),
                    hIcon: "/img/icon/service-icons/grafana.png",
                    linkUrl: "https://stereum.net",
                    headerOption: true,
                    tunnelLink: true,
                    drag: true,
                    state: 'exited',
                    config: {
                        serviceID: "",
                        configVersion: "",
                        image: "",
                        imageVersion: "",
                        ports: [],
                        volumes: [],
                        network: "",
                    }
                },
                {
                    id: 12,
                    name: "Geth",
                    service: "GethService",
                    category: "execution",
                    displayCategory: "exc",
                    path: "/geth",
                    icon: require("../..//public/img/icon/plugin-icons/execution/Geth.png"),
                    sIcon: require("../../public/img/icon/plugin-icons/execution/Geth-s.png"),
                    headerOption: false,
                    drag: true,
                    state: 'exited',
                    config: {
                        serviceID: "",
                        configVersion: "",
                        image: "",
                        imageVersion: "",
                        ports: [],
                        volumes: [],
                        network: "",
                    }
                },
            ],
        };
    },
    getters: {},
    actions: {},
});