---
# Backup and configure SSH for 2FA
- name: Check if /etc/ssh/sshd_config.stereum.bak exists
  stat:
    path: /etc/ssh/sshd_config.stereum.bak
  register: sshd_config_backup

- name: Check if /etc/pam.d/sshd.stereum.bak exists
  stat:
    path: /etc/pam.d/sshd.stereum.bak
  register: pam_sshd_backup

- name: Backup sshd_config if not already backed up
  copy:
    src: /etc/ssh/sshd_config
    dest: /etc/ssh/sshd_config.stereum.bak
    remote_src: yes
  when: not sshd_config_backup.stat.exists

- name: Backup pam-sshd if not already backed up
  copy:
    src: /etc/pam.d/sshd
    dest: /etc/pam.d/sshd.stereum.bak
    remote_src: yes
  when: not pam_sshd_backup.stat.exists

- name: Comment out KbdInteractiveAuthentication in sshd_config
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^KbdInteractiveAuthentication.*$"
    line: '# \0'
    state: present

- name: Add 2FA setup to sshd_config
  blockinfile:
    path: /etc/ssh/sshd_config
    marker: "# {mark} 2FA-Setup"
    block: |
      KbdInteractiveAuthentication yes
      AuthenticationMethods publickey,keyboard-interactive keyboard-interactive

- name: Comment out @include common-auth in pam-sshd
  ansible.builtin.lineinfile:
    path: /etc/pam.d/sshd
    regexp: "^@include common-auth$"
    line: "# @include common-auth"
    state: present

- name: Check if /etc/stereum exists
  ansible.builtin.stat:
    path: /etc/stereum
  register: stereum_dir

- name: Configure PAM auth block and check_ssh_key.sh script if stereum exists
  block:
    - name: Insert PAM custom auth block
      ansible.builtin.blockinfile:
        path: /etc/pam.d/sshd
        insertafter: "^# @include common-auth$"
        marker: "# {mark} SSH Key and Password Check"
        block: |
          auth [success=1 default=ignore] pam_exec.so quiet /etc/stereum/check_ssh_key.sh
          auth    required        pam_unix.so

    - name: Create /etc/stereum/check_ssh_key.sh Perl script
      ansible.builtin.copy:
        dest: /etc/stereum/check_ssh_key.sh
        content: |
          #!/usr/bin/perl

          if ($ENV{'SSH_AUTH_INFO_0'} =~ /^publickey /) {
            exit(0); # ssh key detected -> skip password
          } else {
            exit(1); # no ssh key -> require password
          }
        owner: root
        group: root
        mode: "0700"
  when: stereum_dir.stat.exists

- name: Add Google Authenticator configuration to pam-sshd
  lineinfile:
    path: /etc/pam.d/sshd
    line: "auth required pam_google_authenticator.so grace_period=43200"
    insertafter: EOF

- name: Restart SSH service
  systemd:
    name: sshd
    state: restarted
