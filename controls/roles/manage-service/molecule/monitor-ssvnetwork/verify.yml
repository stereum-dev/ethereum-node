---
- name: Verify
  hosts: all
  gather_facts: false
  tasks:
  - stat: path=/etc/stereum/services
    register: stereum_services_dir
  - debug:
      msg: "{{ stereum_services_dir }}"
  # grafana config files
  - stat: path=/opt/app/services/0af126fa-c881-456f-9388-e977fb1537bf/grafana/grafana.ini
    register: grafana_ini
  - debug:
      msg: "{{ grafana_ini }}"
  - stat: path=/opt/app/services/0af126fa-c881-456f-9388-e977fb1537bf/grafana/provisioning/dashboards/ssv-operator-node.json
    register: grafana_dashboard
  - debug:
      msg: "{{ grafana_dashboard }}"
  - stat: path=/opt/app/services/0af126fa-c881-456f-9388-e977fb1537bf/grafana/provisioning/dashboards/dashboard.yml
    register: dashboard_yml
  - debug:
      msg: "{{ dashboard_yml }}"
  - stat: path=/opt/app/services/0af126fa-c881-456f-9388-e977fb1537bf/grafana/provisioning/datasources/datasource.yml
    register: grafana_datasource
  - debug:
      msg: "{{ grafana_datasource }}"
  - name: Check for grafana config files
    assert:
      that:
        - grafana_ini.stat.exists
        - grafana_dashboard.stat.exists
        - dashboard_yml.stat.exists
        - grafana_datasource.stat.exists
  - name: Waiting for the services to start properly
    pause:
      seconds: 10
  #  grafana logs
  - name: Grafana
    command: "docker logs --tail=100 stereum-0af126fa-c881-456f-9388-e977fb1537bf"
    register: grafana
    until:
      # - grafana.stdout is search('HTTP Server Listen')
      - grafana.stdout is not search("can't read datasource provisioning files from directory")
      - grafana.stdout is not search("can't read dashboard provisioning files from directory")
    retries: 60
    delay: 10
  #  prometheus
  - name: Prometheus
    uri:
      url: http://localhost:9090/api/v1/query?query=up
    register: prometheus_up
    until:
      - prometheus_up.json.status == "success"
      - prometheus_up.json.data.result | length == 5
    retries: 10
    delay: 6
  # container's images & ports
  - shell: docker ps
    register: stereum_docker_ps
  - debug:
      msg: "{{ stereum_docker_ps }}"
  - assert:
      that:
      - (stereum_docker_ps.stdout|regex_findall("Up")|length) == 5

# EOF
