---
- name: Verify
  hosts: all
  gather_facts: false
  tasks:
  - stat: path=/etc/stereum/services
    register: stereum_services_dir
  - debug:
      msg: "{{ stereum_services_dir }}"
  # ufw
  - shell: ufw status
    register: stereum_ufw_status
  - debug:
      msg: "{{ stereum_ufw_status }}"
  - assert:
      that:
      - stereum_ufw_status.stdout.find("13000/tcp") != -1
      - stereum_ufw_status.stdout.find("12000/udp") != -1
      - stereum_ufw_status.stdout.find("4000/tcp") != -1
      - stereum_ufw_status.stdout.find("9090/tcp") != -1
      - stereum_ufw_status.stdout.find("3000/tcp") != -1
  # grafana config files
  - stat: path=/opt/app/services/a5657b06-e068-11ec-8e1c-2f728e608caa/grafana/grafana.ini
    register: grafana_ini
  - debug:
      msg: "{{ grafana_ini }}"
  - stat: path=/opt/app/services/a5657b06-e068-11ec-8e1c-2f728e608caa/grafana/provisioning/dashboards/multiple_source.json
    register: grafana_dashboard
  - debug:
      msg: "{{ grafana_dashboard }}"
  - stat: path=/opt/app/services/a5657b06-e068-11ec-8e1c-2f728e608caa/grafana/provisioning/dashboards/dashboard.yml
    register: dashboard_yml
  - debug:
      msg: "{{ dashboard_yml }}"
  - stat: path=/opt/app/services/a5657b06-e068-11ec-8e1c-2f728e608caa/grafana/provisioning/datasources/datasource.yml
    register: grafana_datasource
  - debug:
      msg: "{{ grafana_datasource }}"
  - name: Check for grafana config files
    assert:
      that:
        - grafana_ini.stat.exists
        - grafana_dashboard.stat.exists
        - dashboard_yml.stat.exists
        - grafana_datasource.stat.exists
  - name: Waiting for the services to start properly
    pause:
      minutes: 5
  #  grafana logs
  - name: Grafana
    command: "docker logs --tail=100 stereum-a5657b06-e068-11ec-8e1c-2f728e608caa"
    register: grafana
    until:
      - grafana.stdout is search('HTTP Server Listen')
      - grafana.stdout is not search("can't read datasource provisioning files from directory")
      - grafana.stdout is not search("can't read dashboard provisioning files from directory")
    retries: 60
    delay: 10
  #  prometheus logs
  - name: Prometheus
    command: "docker logs --tail=100 stereum-87ca1aac-e068-11ec-a974-9bb31ed410be"
    register: prometheus
    until:
      - prometheus.stderr is search("Server is ready to receive web requests")
      - prometheus.stderr is not search("Error loading config")
    retries: 60
    delay: 10
  #  node exporter logs
  - name: Node exporter
    command: "docker logs --tail=100 stereum-9da95c20-e068-11ec-b762-b38d94c6d8a8"
    register: node_exporter
    until:
      - node_exporter.stderr is search("Listening on")
    retries: 60
    delay: 10
  #  prysm beacon logs
  - name: prysm beacon
    command: "docker logs --tail=200 stereum-aba073ae-e068-11ec-8b8a-ab1197e06ccd"
    register: prysm_beacon
    until:
      - prysm_beacon.stderr is search('estimated time remaining')
      - prysm_beacon.stderr is not search('Could not connect to execution client endpoint')
    retries: 60
    delay: 10
  # container's images & ports
  - shell: docker ps
    register: stereum_docker_ps
  - debug:
      msg: "{{ stereum_docker_ps }}"
  - assert:
      that:
      - stereum_docker_ps.stdout.find("grafana/grafana") != -1
      - stereum_docker_ps.stdout.find("prom/node-exporter") != -1
      - stereum_docker_ps.stdout.find("prom/prometheus") != -1
      - stereum_docker_ps.stdout.find("prysmaticlabs/prysm-beacon-chain") != -1
      - stereum_docker_ps.stdout.find("3000->3000") != -1
      - stereum_docker_ps.stdout.find("9100/tcp") != -1
      - stereum_docker_ps.stdout.find("9090->9090") != -1
      - stereum_docker_ps.stdout.find("4000->4000") != -1
      - stereum_docker_ps.stdout.find("12000->12000") != -1
      - stereum_docker_ps.stdout.find("13000->13000") != -1
      - (stereum_docker_ps.stdout|regex_findall("Up")|length) == 4

# EOF
