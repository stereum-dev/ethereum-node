---
- include_tasks: write-configuration.yml
  when: stereum.manage_service.save is defined and stereum.manage_service.save

- name: Change state of service
  block:
  - name: Build service configuration's path
    set_fact:
      stereum_service_config_path: "/etc/stereum/services/{{ stereum.manage_service.configuration.id }}.yaml"

  - name: Read service's configuration
    slurp:
      src: "{{ stereum_service_config_path }}"
    register: stereum_service_configuration_raw
    become: yes

  - name: Read variable
    set_fact:
      stereum_service_configuration: "{{ stereum_service_configuration_raw.content | b64decode | from_yaml }}"
    become: yes

  - name: Build service container's name
    set_fact:
      stereum_service_container_name: "stereum-{{ stereum_service_configuration.id }}"

  - name: Set directory permissions
    file:
      path: "{{ item.split(':') | first }}"
      state: directory
      owner: "{{ stereum_service_configuration.user }}"
      group: "2000"
      mode: 0700
    become: yes
    when: stereum.manage_service.state == "start" or stereum.manage_service.state == "restarted"
    with_items: "{{ stereum_service_configuration.volumes }}"

  - name: validator Stereum's docker network
    docker_network:
      name: stereum  

  - name: Create validator keys
    copy:
      dest: "/opt/app/services/2e83d610-48b8-11ec-802a-330dee8e6b2e/launchpad/{{ item.name }}"
      content: "{{ item.content }}"
      owner: "{{ stereum_service_configuration.user }}"
      group: "2000"
      mode: 0700
    become: yes
    with_items: "{{ validator_keys }}"  

  - name: Creating expect script for import 
    copy:
      dest: "/opt/app/import/lighthouse_validator_import.sh"
      content: |
        #!/usr/bin/expect

        set timeout -1
        set validator_password [lindex $argv 0];

        if {[ llength $validator_password ] == 0 } {
           exit
        }

        spawn sh -c { sudo docker run --rm -it \
                       -e DEBUG_LEVEL=debug \
                       -e NETWORK=prater \
                       -e DATADIR="/opt/app/validator" \
                       -e DIRECTORY="/opt/app/launchpad" \
                       -v "/opt/app/services/2e83d610-48b8-11ec-802a-330dee8e6b2e/validator":"/opt/app/validator" \
                       -v "/opt/app/services/2e83d610-48b8-11ec-802a-330dee8e6b2e/launchpad":"/opt/app/launchpad" \
                       --user "2000":"2000" \
                       --net "stereum" \
                       --entrypoint "/opt/app/start/import-launchpad-wallet.sh" \
                       validator_image
                    }

        expect {
            "Enter the keystore password" {
              send "$validator_password\r"
              sleep 3
              set results $expect_out(buffer)
              if {[regexp -nocase "Invalid password" $results]} {
                exit
              } elseif {[regexp -nocase "Skipping import of keystore for existing public key" $results]} {
                exit
              }
              exp_continue
            }
        } 
      owner: "{{ stereum_service_configuration.user }}"
      group: "2000"     
      mode: 0700
    become: yes   

  - name: Start beacon service
    docker_container:
      command_handling: correct
      name: beacon
      hostname: beacon
      user: "{{ stereum_service_configuration.user }}"
      image: "{{ stereum_service_configuration.image }}"
      env: 
            DEBUG_LEVEL: debug
            NETWORK: prater
            ETH1_NODES: "{{ eth1_infura }}"
            DATADIR: /opt/app/beacon
            SLASHERDIR: /opt/app/slasher
            SLASHER_DB_SIZE: "16"
      ports:
        - 9000:9000/tcp
        - 9000:9000/udp 
        - 127.0.0.1:5052:5052     
      command: []
      entrypoint: ["/opt/app/start/beacon.sh"]
      restart_policy: "unless-stopped"
      state: started
      # recreate: yes # default: no
      networks:
        - name: stereum
      # working_dir: "{{ stereum_service_configuration.working_dir }}" # doesn't work at all
      volumes: "{{ stereum_service_configuration.volumes }}"
      log_driver: "json-file"
      log_options:
        max-file: "10"
        max-size: "100m"
    become: yes               

  - name: Start validator service
    docker_container:
      command_handling: correct
      name: "{{ stereum_service_container_name }}"
      user: "{{ stereum_service_configuration.user }}"
      image: "{{ stereum_service_configuration.image }}"
      env: "{{ stereum_service_configuration.env }}"
      command: "{{ stereum_service_configuration.command }}"
      entrypoint: "{{ stereum_service_configuration.entrypoint }}"
      restart_policy: "unless-stopped"
      state: started
      # recreate: yes # default: no
      networks:
        - name: stereum
      # working_dir: "{{ stereum_service_configuration.working_dir }}" # doesn't work at all
      volumes: "{{ stereum_service_configuration.volumes }}"
      log_driver: "json-file"
      log_options:
        max-file: "10"
        max-size: "100m"
    become: yes
    when: stereum.manage_service.state == "start" or stereum.manage_service.state == "restarted"

  - name: Sleep for 30 seconds and continue with play
    wait_for:
      timeout: 30 
    become: yes   

  - name: Stop validator service
    docker_container:
      name: "{{ stereum_service_container_name }}"
      state: stopped
    become: yes

  - name: Create validator_image from validator service
    shell: "docker commit {{ stereum_service_container_name }} validator_image"
    become: yes

  - name: Run validator import
    shell: "./lighthouse_validator_import.sh {{ validator_password | quote }}"
    args: 
      chdir: /opt/app/import
    become: yes
    register: import_output

  - debug: 
      msg: "{{ import_output }}"      

  when: stereum.manage_service.state is defined 
